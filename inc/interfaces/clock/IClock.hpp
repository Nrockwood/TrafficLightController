#ifndef INCLUDE_ICLOCK_H_
#define INCLUDE_ICLOCK_H_

class IClock
{
public:
    ////////////////////////////////////////////////////////////
    ///  @brief Destroy the IClock object
    ///  
    ////////////////////////////////////////////////////////////
    virtual ~IClock() = default;

    ////////////////////////////////////////////////////////////
    ///  @brief All timestamps can be treated as seconds.
    ///     Here, "Time" is used for both timestamps and timespans.
    ///  
    ////////////////////////////////////////////////////////////
    using Time = int;

    ////////////////////////////////////////////////////////////
    ///  @brief Get the current timestamp
    ///  
    ///  @return Time The time right now
    ////////////////////////////////////////////////////////////
    virtual Time now(void) const = 0;

    ////////////////////////////////////////////////////////////
    ///  @brief Set the current timestamp
    ///  
    ///  @param now Set the time to now
    ////////////////////////////////////////////////////////////
    virtual void set(Time now) = 0;

    ////////////////////////////////////////////////////////////
    ///  @brief Advance the current timestamp
    ///  
    ///  @param delta Amount to advance time by
    ////////////////////////////////////////////////////////////
    virtual void advance(Time delta) = 0;

    ////////////////////////////////////////////////////////////
    ///  @brief Calculate the time elapsed (or until) an event
    ///  
    ///  @param then Some time greater than the current time
    ///  @return Time The difference between now and then
    ////////////////////////////////////////////////////////////
    virtual Time elapsed(Time then) const = 0;
};

#endif // INCLUDE_ICLOCK_H_
